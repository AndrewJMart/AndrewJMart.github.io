[
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "Race Classifier Residual Neural Network Implementation\n\n\n\n\n\n\n\n\n\n\n\n\nMay 25, 2024\n\n\nAndrew Martinez\n\n\n\n\n\n\n  \n\n\n\n\nClimbing Data API\n\n\n\n\n\n\n\n\n\n\n\n\nMay 25, 2024\n\n\nAndrew Martinez\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/projects/Climbing API.html",
    "href": "posts/projects/Climbing API.html",
    "title": "Climbing Data API",
    "section": "",
    "text": "This project aims to provide an API for rock climbers to log their climbs, discover new routes, and receive recommendations based on their climbing history. It utilizes FastAPI for building the API endpoints, SQLAlchemy for database interactions, and Geopandas for geospatial data processing."
  },
  {
    "objectID": "posts/projects/Climbing API.html#project-background",
    "href": "posts/projects/Climbing API.html#project-background",
    "title": "Climbing Data API",
    "section": "",
    "text": "This project aims to provide an API for rock climbers to log their climbs, discover new routes, and receive recommendations based on their climbing history. It utilizes FastAPI for building the API endpoints, SQLAlchemy for database interactions, and Geopandas for geospatial data processing."
  },
  {
    "objectID": "posts/projects/Climbing API.html#implementation-details",
    "href": "posts/projects/Climbing API.html#implementation-details",
    "title": "Climbing Data API",
    "section": "Implementation Details",
    "text": "Implementation Details\n\nData Processing\nThe project involves an initial preprocessing climbing route data, which was found at Open Beta to build our initial user data in our SupaBase data base. In addition, we continued to process large quantites of user and climb data through our API endpoints listed below.\n\n\nAPI Key Authentication\nThe API employs API key authentication using FastAPI’s APIKeyHeader for secure access to the endpoints. Users need to include their API key in the request header for authorization."
  },
  {
    "objectID": "posts/projects/Climbing API.html#endpoints",
    "href": "posts/projects/Climbing API.html#endpoints",
    "title": "Climbing Data API",
    "section": "Endpoints",
    "text": "Endpoints\n\nClimbing Logs\nUsers can create climb log entries, providing details such as route ID (Route Name), frequency, intensity, heart rate, and blood pressure.\n\n\nUser History\nThis endpoint retrieves all previous climbs performed by a specific user, providing insights into their climbing activity over time.\n\n\nRoute Recommendations\nBased on a user’s climbing history, the API recommends climbing routes. This endpoint is performed by utilizing collaborative filtering to analyze other user’s climbs to then recommend climbs.\n\n\nAdd Route\nUsers can add new climbing routes to the database, including details such as route name, location, difficulty grade, climbing style, description, and protection."
  },
  {
    "objectID": "posts/projects/Climbing API.html#project-output",
    "href": "posts/projects/Climbing API.html#project-output",
    "title": "Climbing Data API",
    "section": "Project Output",
    "text": "Project Output\nThe API provides a seamless interface for climbers to manage their climbing activity, explore new routes, and receive personalized recommendations. It enhances the climbing experience by leveraging modern web technologies and geospatial analysis.\nFor the complete code implementation and documentation, visit the GitHub repository."
  },
  {
    "objectID": "blogs.html",
    "href": "blogs.html",
    "title": "Blogs",
    "section": "",
    "text": "No matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Andrew Martinez is an undergraduate student at Cal Poly San Luis Obispo, pursuing a career in Data Science. He has work experience on Marketing Analytics, Data Science, and AI/ML teams.\nIn his spare time you will find Andrew watching the Oakland Athletics or Sacramento Kings."
  },
  {
    "objectID": "about.html#biography",
    "href": "about.html#biography",
    "title": "About",
    "section": "",
    "text": "Andrew Martinez is an undergraduate student at Cal Poly San Luis Obispo, pursuing a career in Data Science. He has work experience on Marketing Analytics, Data Science, and AI/ML teams.\nIn his spare time you will find Andrew watching the Oakland Athletics or Sacramento Kings."
  },
  {
    "objectID": "about.html#interests",
    "href": "about.html#interests",
    "title": "About",
    "section": "Interests",
    "text": "Interests\n\nData Science\nMachine Learning\nNatural Language Processing\nComputer Vision\nData Visualization\nStatistical Modeling\nBusiness Analytics"
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "About",
    "section": "Education",
    "text": "Education\n\nBS\nStatistics, California Polytechnic State University San Luis Obispo, 2025\n\n\nBS\nBusiness Administration, California Polytechnic State University San Luis Obispo, 2025"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Projects & Blogs",
    "section": "",
    "text": "Climbing Data API\n\n\n\n\n\n\n\nprojects\n\n\n\n\n\n\n\n\n\n\n\nMay 25, 2024\n\n\nAndrew Martinez\n\n\n\n\n\n\n  \n\n\n\n\nRace Classifier Residual Neural Network Implementation\n\n\n\n\n\n\n\nprojects\n\n\n\n\n\n\n\n\n\n\n\nMay 25, 2024\n\n\nAndrew Martinez\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/projects/Race Classifier Residual Neural Network Implementation.html",
    "href": "posts/projects/Race Classifier Residual Neural Network Implementation.html",
    "title": "Race Classifier Residual Neural Network Implementation",
    "section": "",
    "text": "This project stemmed from my personal exploration into CNNs and ResNet architecture and my desire to apply the new found knowledge I learned. In this project I applied a ResNet CNN style architecture to develop a multiclass classification computer vision model that identifies a person’s race based on a photo."
  },
  {
    "objectID": "posts/projects/Race Classifier Residual Neural Network Implementation.html#project-background",
    "href": "posts/projects/Race Classifier Residual Neural Network Implementation.html#project-background",
    "title": "Race Classifier Residual Neural Network Implementation",
    "section": "",
    "text": "This project stemmed from my personal exploration into CNNs and ResNet architecture and my desire to apply the new found knowledge I learned. In this project I applied a ResNet CNN style architecture to develop a multiclass classification computer vision model that identifies a person’s race based on a photo."
  },
  {
    "objectID": "posts/projects/Race Classifier Residual Neural Network Implementation.html#implementation-details",
    "href": "posts/projects/Race Classifier Residual Neural Network Implementation.html#implementation-details",
    "title": "Race Classifier Residual Neural Network Implementation",
    "section": "Implementation Details",
    "text": "Implementation Details\n\nData Preprocessing\nThe initial part of the code deals with data preprocessing tasks, including resizing, cropping, and augmentation of images using PyTorch’s transforms module. The goal here is to prepare the dataset for training the Residual CNN model.\n\n\nModel Architecture\nThe Residual CNN model is constructed using PyTorch’s nn.Module class. The model’s architecture is as follows, one initial convolutional layer with batch normalization and a max pooling layer. Which is then followed up with four residual blocks, with the first residual block containing four convolutional layers, with each having a batch normalization layer, and the latter three residual blocks containing two convolutional layers, with each convolutional layer having its own batch normalization layer. Initially I opted to pursue a more complex Residual CNN architecture, however after experiencing over fitting I opted to minimize the complexity of the model architecture.\n\n\nTraining and Validation\nThe model is trained and validated using a stratified k-fold cross-validation approach. For each fold, the data set is split into training and validation subsets. One major concern within the data set is the large class imbalances. The White labels comprise of roughly 45% of the data, which will kill model performance unless properly dealt with. To address this issue I utilized stratified k-fold to properly sample class labels for the training and testing data. Additionally, I created weights for the Cross Entropy Loss based on the respective frequencies of the classes to better weight the classes."
  },
  {
    "objectID": "posts/projects/Race Classifier Residual Neural Network Implementation.html#project-output",
    "href": "posts/projects/Race Classifier Residual Neural Network Implementation.html#project-output",
    "title": "Race Classifier Residual Neural Network Implementation",
    "section": "Project Output",
    "text": "Project Output\nThe output of the project includes the training and validation loss and accuracy metrics for each fold and epoch. While the final epochs hovered around 86% validation accuracy, I believe that models such as ADABOOST, which are specifically designed for facial recognition, would heavily outperform this design.\nThis project serves as a learning experience for understanding the implementation of deep learning models from scratch and gaining hands-on experience with CNNs and Residual Networks.\nFor the code, implementation and outputs, please visit my GitHub repository."
  }
]